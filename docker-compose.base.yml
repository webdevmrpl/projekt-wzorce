services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: notes-api
    
    depends_on:
      database:
        condition: service_healthy
    
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_BACKEND_URL=redis://redis:6379/0

    command: uvicorn app.main:app --host 0.0.0.0 --port 8001

    volumes:
      - .:/app
    networks:
      - notes-net
  
  celery:
    container_name: notes-celery
    build:
      context: ./app
      dockerfile: Dockerfile
    
    command: celery --app=app.celery.celery:app worker --hostname=celeryWorker1@%h -l INFO -Q tasks

    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_BACKEND_URL=redis://redis:6379/0

    depends_on:
      - database
      - app
      - rabbitmq
      - redis
        
    volumes:
      - .:/app
    networks:
      - notes-net

  flower:
    image: mher/flower
    container_name: notes-flower
    ports: 
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    networks:
      - notes-net


  rabbitmq:
    image: rabbitmq:management
    container_name: notes-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - notes-net


  redis:
    image: redis:7.0.11-alpine
    container_name: notes-redis
    networks:
      - notes-net


  database:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: notes-dynamodb
    healthcheck:
      test: [ "CMD-SHELL", 'if [ "$(curl -s -o /dev/null -I -w ''%{http_code}'' http://localhost:8000)" == "400" ]; then exit 0; else exit 1; fi' ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    networks:
      - notes-net

networks:
  notes-net: